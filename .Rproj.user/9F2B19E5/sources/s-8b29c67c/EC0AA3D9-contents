# use top 5 cyclic genes to infer cell cycle phases
ngenes <- 5

library(Biobase)
pdata <- pData(eset)
theta <- pdata$theta
names(theta) <- rownames(pdata)

# normalization
log2cpm <- t(log2(1+(10^6)*(t(exprs(eset))/pdata$molecules)))

# transformation
log2cpm <- log2cpm[,match(colnames(log2cpm.quant),colnames(log2cpm))]
theta_ordered <- theta[match(colnames(log2cpm.quant),names(theta))]
pdata_ordered <- pdata[match(colnames(log2cpm.quant),rownames(pdata)),]

# trasform expression data (log2CPM) to normal distribution for each gene
# log2cpm.quant <- readRDS("data/log2cpm.quant.rds")
# eset <- get(load("data/eset_final.RData"))


# load cyclic trends for each gene across the 888 samples
fits.cyclic <- readRDS("data/fit.quant.rds")
genes_pve <- names(fits_all)[order(sapply(fits.cyclic,"[[",3), decreasing=T)]
which_genes <- genes_pve[1:ngenes]

# get sample labels
ind <- pData(eset)$chip_id
data_testing <- expr_transformed[,ind=="NA19160"]



Y_train_normed_fold_topX <- data_training[which(rownames(data_training) %in% which_genes),]
theta_train_fold <- theta_ordered[fold_indices[[fold]]$train]


fit.train <- cycle.npreg.insample(Y = Y_train_normed_fold_topX,
                                  theta = theta_train_fold,
                                  polyorder=2,
                                  ncores=ncores,
                                  method.trend="trendfilter")

Y_test_normed_fold_topX <- data_withheld[which(rownames(data_withheld) %in% which_genes),]
Y_test_fold <- log2cpm[,fold_indices[[fold]]$test]
theta_test_fold <- theta_ordered[fold_indices[[fold]]$test]
pdata_test_fold <- pdata_ordered[fold_indices[[fold]]$test,]

# fit.test <- run_methods(Y_test=Y_test_fold,
#                         Y_test_normed=Y_test_normed_fold_topX,
#                         theta_test=theta_test_fold,
#                         training_model=fit.train,
#                         seurat.genes=seurat.genes,
#                         pdata_test=pdata_test_fold,
#                         fdata=fData(eset),
#                         ncores=ncores, maxiter=30)


